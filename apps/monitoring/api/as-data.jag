<%
/*
 * Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

include('db.jag');
var helper = require('as-data-helper.js');
var action = request.getParameter('action');
var where = buildConditions();
var now = new Date();
var end_time = request.getParameter('end_time');

/*
 build the ammendment to the prepared statement along with the parameter values based on
 start_time, end_time, node and webapp
*/
function buildConditions() {
    // default data range is the past 24 hours
    var startTime = request.getParameter('start_time') || helper.formatDate(new Date(now -
            86400000));
    var endTime = request.getParameter('end_time') || helper.formatDate(now);
    var node = request.getParameter('node');
    var webapp = request.getParameter('appname');
    var where = [];
    var params = [];

    if(startTime != null) {
        where.push('time >= ?');
        params.push(startTime);
    }
    if(endTime != null) {
        where.push('time <= ?');
        params.push(endTime);
    }
    if (node != null && node != 'All') {
        where.push('serverName = ?');
        params.push(String(node));
    }
    if (webapp != null && webapp != "null") {
        where.push('webappName= ?');
        params.push(String(webapp));
    }
    return [' WHERE ' + where.join(' AND '), params];
}

function getNodeList() {
    var nodeList = require('node-list.jag');
    nodeList.getNodeList();
}

function getAppsStat() {
    var appList = require('app-list.jag');
    appList.getAppsStat(where, end_time || helper.formatDate(now));
}

function getBrowserStat() {
    var technologyStat = require('technology-stat.jag');
    technologyStat.getTechnologyStat(where, 'browser', 4, 'Other Browsers');
}

function getBrowserTabularStat() {
    var technologyStat = require('technology-stat.jag');
    technologyStat.getTechnologyTubularStat(where, 'browser',
            ['Browser', 'Request Count', 'Percentage'], '2');
}

function getOperatingSystemStat() {
    var technologyStat = require('technology-stat.jag');
    technologyStat.getTechnologyStat(where, 'os', 5, 'Other Operating Systems');
}

function getOperatingSystemTabularStat() {
    var technologyStat = require('technology-stat.jag');
    technologyStat.getTechnologyTubularStat(where, 'os',
            ['Operating System', 'Request Count', 'Percentage'], '2');
}

function getDeviceTypeStat() {
    var technologyStat = require('technology-stat.jag');
    technologyStat.getTechnologyStat(where, 'device-type', 5, 'Other devices');
}

function getDeviceTypeTabularStat() {
    var technologyStat = require('technology-stat.jag');
    technologyStat.getTechnologyTubularStat(where, 'device-type',
            ['Device type', 'Request Count', 'Percentage'], '2');
}

function getHttpStatusStat() {
    var technologyStat = require('technology-stat.jag');
    technologyStat.getHttpStatusStat(where);
}

function getHttpStatusTabularStat() {
    var technologyStat = require('technology-stat.jag');
    technologyStat.getHttpStatusTabularStat(where, ['HTTP Response Code', 'Request Count',
        'Percentage'], '1');
}

function getLanguageStat() {
    var geoStat = require('geo-stat.jag');
    geoStat.getLanguageStat(where);
}

function getLanguageTabularStat() {
    var geoStat = require('geo-stat.jag');
    geoStat.getLanguageTabularStat(where);
}

function getCountryStat() {
    var geoStat = require('geo-stat.jag');
    geoStat.getCountryStat(where);
}

function getCountryTabularStat() {
    var geoStat = require('geo-stat.jag');
    geoStat.getCountryTabularStat(where);
}

function getContextStat() {
    var trafficStat = require('traffic-stat.jag');
    trafficStat.getTrafficStat(where, 'context', ['Context', 'Request Count', 'Percentage'], '2')
}
function getReferralStat() {
    var trafficStat = require('traffic-stat.jag');
    trafficStat.getTrafficStat(where, 'referral', ['Referrer', 'Request Count', 'Percentage'], '2')
}

function getRequestStat() {
    var timeVaryingStat = require('time-varying-stat.jag');
    timeVaryingStat.getTimeVaryingStat(where, 'request');
}

function getResponseStat() {
    var timeVaryingStat = require('time-varying-stat.jag');
    timeVaryingStat.getTimeVaryingStat(where, 'response', '#bacf0b');
}

function getErrorStat() {
    var timeVaryingStat = require('time-varying-stat.jag');
    timeVaryingStat.getTimeVaryingStat(where, 'error', '#e7912a');
}

function getInfoBoxRequestStat() {
    var infoBoxStat = require('info-box-stat.jag');
    return infoBoxStat.getInfoBoxRequestStat(where);
}

function getInfoBoxResponseStat() {
    var infoBoxStat = require('info-box-stat.jag');
    return infoBoxStat.getInfoBoxResponseStat(where);
}

function getInfoBoxSessionStat() {
    var infoBoxStat = require('info-box-stat.jag');
    return infoBoxStat.getInfoBoxSessionStat(where);
}

function getInfoBoxErrorStat() {
    var infoBoxStat = require('info-box-stat.jag');
    return infoBoxStat.getInfoBoxErrorStat(where);
}

var actionMapping = {
    'node-list': getNodeList,
    'apps': getAppsStat,
    'browser': getBrowserStat,
    'browser-tabular': getBrowserTabularStat,
    'operating-system': getOperatingSystemStat,
    'operating-system-tabular': getOperatingSystemTabularStat,
    'device-type': getDeviceTypeStat,
    'device-type-tabular': getDeviceTypeTabularStat,
    'top-http-status': getHttpStatusStat,
    'top-http-status-tabular': getHttpStatusTabularStat,
    'language': getLanguageStat,
    'language-tabular': getLanguageTabularStat,
    'country': getCountryStat,
    'country-tabular': getCountryTabularStat,
    'context': getContextStat,
    'referral': getReferralStat,
    'request': getRequestStat,
    'response': getResponseStat,
    'error': getErrorStat,
    'request-count': getInfoBoxRequestStat,
    'response-count': getInfoBoxResponseStat,
    'session-count': getInfoBoxSessionStat,
    'error-count': getInfoBoxErrorStat
};

actionMapping[action]();

%>